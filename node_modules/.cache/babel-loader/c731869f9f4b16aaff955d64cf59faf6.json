{"ast":null,"code":"import { GET_PRO_FAILURE, GET_PRO_REQ, GET_PRO_SUCCESS } from \"./actionTypes\";\nconst initState = {\n  products: [],\n  isLoading: false,\n  isError: false\n};\nexport const Reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (type) {\n    case GET_PRO_REQ:\n      return { ...state,\n        isLoading: true\n      };\n\n    case GET_PRO_SUCCESS:\n      return { ...state,\n        isLoading: false,\n        products: [...state.products, payload]\n      };\n\n    case GET_PRO_FAILURE:\n      return { ...state,\n        isLoading: false,\n        isError: true\n      };\n\n    default:\n      return { ...state\n      };\n  }\n};\n_c = Reducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reducer\");","map":{"version":3,"sources":["C:/Users/Roshan Y. Jambhulkar/Downloads/Source/Source/src/Redux/reducer.js"],"names":["GET_PRO_FAILURE","GET_PRO_REQ","GET_PRO_SUCCESS","initState","products","isLoading","isError","Reducer","state","type","payload"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,EAAuCC,eAAvC,QAA8D,eAA9D;AAGA,MAAMC,SAAS,GAAG;AACdC,EAAAA,QAAQ,EAAC,EADK;AAEdC,EAAAA,SAAS,EAAC,KAFI;AAGdC,EAAAA,OAAO,EAAC;AAHM,CAAlB;AAMA,OAAO,MAAMC,OAAO,GAAG,YAAsC;AAAA,MAArCC,KAAqC,uEAA7BL,SAA6B;AAAA,MAAlB;AAACM,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GAAkB;;AACzD,UAAOD,IAAP;AACI,SAAMR,WAAN;AACI,aAAO,EAAE,GAAGO,KAAL;AAAYH,QAAAA,SAAS,EAAG;AAAxB,OAAP;;AACJ,SAAKH,eAAL;AACI,aAAO,EAAE,GAAGM,KAAL;AAAYH,QAAAA,SAAS,EAAG,KAAxB;AAA+BD,QAAAA,QAAQ,EAAG,CAAC,GAAGI,KAAK,CAACJ,QAAV,EAAoBM,OAApB;AAA1C,OAAP;;AACJ,SAAKV,eAAL;AACI,aAAO,EAAE,GAAGQ,KAAL;AAAYH,QAAAA,SAAS,EAAG,KAAxB;AAA+BC,QAAAA,OAAO,EAAG;AAAzC,OAAP;;AACJ;AACI,aAAO,EAAE,GAAGE;AAAL,OAAP;AARR;AAUH,CAXM;KAAMD,O","sourcesContent":["import { GET_PRO_FAILURE, GET_PRO_REQ, GET_PRO_SUCCESS } from \"./actionTypes\"\n\n\nconst initState = {\n    products:[],\n    isLoading:false,\n    isError:false\n}\n\nexport const Reducer = (state = initState, {type, payload})=>{\n    switch(type){\n        case  GET_PRO_REQ :\n            return { ...state, isLoading : true}\n        case GET_PRO_SUCCESS :\n            return { ...state, isLoading : false, products : [...state.products, payload]}\n        case GET_PRO_FAILURE :\n            return { ...state, isLoading : false, isError : true}\n        default :\n            return { ...state }\n    }\n}"]},"metadata":{},"sourceType":"module"}